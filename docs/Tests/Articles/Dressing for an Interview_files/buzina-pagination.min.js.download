/**
 * Buzina Pagination http://github.com/mikebrsv/buzina-pagination
 * Author: Mikhail Borisov http://github.com/mikebrsv
 * License: https://github.com/mikebrsv/buzina-pagination/blob/master/LICENSE
 */

(function($) {
  $.fn.buzinaPagination = function(options) {
      var settings = $.extend({
          prevnext: !0,
          prevText: "Prev",
          nextText: "Next",
          itemsOnPage: 1
      }, options);
      var buzinaContent = $(this);
      var itemsTotal = buzinaContent.children().length;
      var pagesTotal = buzinaContent.children().length;
      var buzinaContentId = buzinaContent.attr("id");
      var pageClass = buzinaContentId + "--page-";
      var pagerId = buzinaContentId + "--pager";
      for (i = 0; i < pagesTotal; i++) {
          $("#" + buzinaContentId + "> div").slice(i, i + settings.itemsOnPage).wrapAll("<div></div>");
          buzinaContent.children(":eq(" + i + ")").addClass(pageClass + (i + 1) + " content-page")
      }
      pagesTotal = buzinaContent.children().length;
      buzinaContent.children(":first").addClass("content-page-active");
      var pagerDom = createPagerDom(pagesTotal, pagerId, settings, itemsTotal);
      buzinaContent.after(pagerDom);
      $("#" + pagerId + " a.page-link").click(function(e) {
          e.preventDefault();
          var pageClicked = this.text;
          var pages = $('.page-item');
          if (pageClicked == settings.prevText) {
              var currentActive = $(".content-page-active").attr("class");
              var currentActiveNumber = currentActive.substring(currentActive.indexOf("--page") + 7, currentActive.indexOf(" "));
              $('.prev-btn').removeClass('disabled');
              $('.next-btn').removeClass('disabled');
              if (currentActiveNumber > 1) {
                $(".content-page").removeClass("content-page-active");
                $("." + pageClass + (parseInt(currentActiveNumber) - 1)).addClass("content-page-active");
                pages.removeClass('active');
                var i=0;
                pages.each(function() {
                  i++;
                  var page = $(this);
                  if (i == (parseInt(currentActiveNumber))) {
                    page.addClass('active'); return false;
                  }
                });
                $('.prev-btn').removeClass('disabled');
              } else {
                $('.prev-btn').addClass('disabled');
              }
              let startItem = (1 + ((parseInt(currentActiveNumber) - 2) * settings.itemsOnPage));
              $('#startItem').html(startItem);
              let endItem = (parseInt(currentActiveNumber - 1) * settings.itemsOnPage);
              if (endItem > itemsTotal) {
                endItem = itemsTotal;
              }
              $('#endItem').html(endItem);
              if ((parseInt(currentActiveNumber) - 1) == 1) {
                $('.prev-btn').addClass('disabled');
              }
              if ((parseInt(currentActiveNumber) - 1) == pagesTotal) {
                $('.next-btn').addClass('disabled');
              }
          } else if (pageClicked == settings.nextText) {
              var currentActive = $(".content-page-active").attr("class");
              var currentActiveNumber = currentActive.substring(currentActive.indexOf("--page") + 7, currentActive.indexOf(" "));
              $('.prev-btn').removeClass('disabled');
              $('.next-btn').removeClass('disabled');
              if (currentActiveNumber < pagesTotal) {
                $(".content-page").removeClass("content-page-active");
                $("." + pageClass + (parseInt(currentActiveNumber) + 1)).addClass("content-page-active");
                pages.removeClass('active');
                var i=0;
                pages.each(function() {
                  i++;
                  var page = $(this);
                  if (i == (parseInt(currentActiveNumber) + 2)) {
                    page.addClass('active'); return false;
                  }
                });
                $('.next-btn').removeClass('disabled');
              } else {
                $('.next-btn').addClass('disabled');
              }
              let startItem = (1 + (parseInt(currentActiveNumber) * settings.itemsOnPage));
              $('#startItem').html(startItem);
              let endItem = ((parseInt(currentActiveNumber) + 1) * settings.itemsOnPage);
              if (endItem > itemsTotal) {
                endItem = itemsTotal;
              }
              $('#endItem').html(endItem);
              if ((parseInt(currentActiveNumber) + 1) == 1) {
                $('.prev-btn').addClass('disabled');
              }
              if ((parseInt(currentActiveNumber) + 1) == pagesTotal) {
                $('.next-btn').addClass('disabled');
              }
          } else {
            pages.removeClass('active');
            $(".content-page").removeClass("content-page-active");
            $("." + pageClass + pageClicked).addClass("content-page-active");
            var i=0;
            pages.each(function() {
              i++;
              var page = $(this);
              if (i == (parseInt(pageClicked) + 1)) {
                page.addClass('active');return false;
              }
            });
            let startItem = (1 + ((pageClicked - 1) * settings.itemsOnPage));
            $('#startItem').html(startItem);
            let endItem = pageClicked * settings.itemsOnPage;
            if (endItem > itemsTotal) {
              endItem = itemsTotal;
            }
            $('#endItem').html(endItem);
            $('.prev-btn').removeClass('disabled');
            $('.next-btn').removeClass('disabled');
            if (pageClicked == 1) {
              $('.prev-btn').addClass('disabled');
            }
            if (pageClicked == pagesTotal) {
              $('.next-btn').addClass('disabled');
            }
          }
      });
      $("#" + pagerId + " button").click(function(e) {
        console.log('print');
      });
  }
})(jQuery);



function printElement(elem, append, delimiter) {
  var domClone = elem.cloneNode(true);

  var $printSection = document.getElementById("printSection");

  if (!$printSection) {
      $printSection = document.createElement("div");
      $printSection.id = "printSection";
      document.body.appendChild($printSection);
  }

  if (append !== true) {
      $printSection.innerHTML = "";
  }

  else if (append === true) {
      if (typeof (delimiter) === "string") {
          $printSection.innerHTML += delimiter;
      }
      else if (typeof (delimiter) === "object") {
          $printSection.appendChild(delimiter);
      }
  }

  $printSection.appendChild(domClone);
}

function createPagerDom(pagesTotal, pagerId, settings, itemsTotal) {
  let ret = '';
  let pagerConc = "";
  if (pagesTotal > 1) {
    for (i = 0; i < pagesTotal; i++) {
        pagerConc += '<li class="page-item';
        if (i==0) {
          pagerConc += ' active';
        }
        pagerConc += '"><a class="page-link link" href="#">' + (i + 1) + '</a></li>';
    }
    if (settings.prevnext) {
        let prevDom = '<li class="page-item disabled prev-btn"><a class="page-link link" href="#">' + settings.prevText + '</a></li>';
        let nextDom = '<li class="page-item next-btn"><a class="page-link link" href="#">' + settings.nextText + '</a></li>';
        pagerConc = prevDom + pagerConc + nextDom;
    }
  }
  ret = '<nav id="' + pagerId + '" class="row mx-lg-5 bg-darkgray border border-top-0 align-items-center d-print-none py-3" aria-label="Service List pagination">';
  ret += '<div class="col-12 offset-0 offset-xl-4 col-xl-4 d-flex justify-content-center"><ul class="pagination pagination-sm">' + pagerConc + '</ul></div>';
  ret += '<div class="col-6 col-lg-4 d-flex justify-content-end align-items-center text-white small">';
  ret += '<div>Displaying</div><div id="startItem" class="ml-1">1</div>-<div id="endItem" class="mr-1">';
  ret += (settings.itemsOnPage > itemsTotal) ? itemsTotal : settings.itemsOnPage;
  ret += '</div>';
  ret += '<div class="mr-2">of ' + itemsTotal + ' possible match';
  if (itemsTotal !== 1) {
    ret += 'es';
  }
  ret += '</div><!-- | <button role="button" class="btn btn-link btn-sm my-0 p-0 text-white mx-2" id="printListBtn">Print</button>-->'
  ret += '</div>'
  ret += '</nav>';
  return ret;
}